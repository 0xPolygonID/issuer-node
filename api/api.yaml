openapi: 3.1.0
info:
  title: Self Hosted ID Platform
  description: |
    Documentation for the Self Hosted ID Platform
  version: 0.1.0

servers:
  - description: Local
    url: http://127.0.0.1

tags:
  - name: Section 1
    description: Section 1 endpoints
  - name: Section 2
    description: Section 2 endpoints
  - name: Identity
    description: Collection of endpoints related to Identity
  - name: Claim
    description: Collection of endpoints related to Claims

paths:
  /:
    get:
      summary: Get the documentation
      operationId: GetDocumentation
      x-internal: true
      responses:
        200:
          description: success and returns the documentation in HTML format


  /static/docs/api/api.yaml:
    get:
      summary: Get the documentation yaml file
      operationId: GetYaml
      x-internal: true
      responses:
        200:
          description: success and returns the documentation in Yaml format


  /status:
    get:
      summary: Healthcheck
      operationId: Health
      responses:
        '200':
          description: All services are running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '500':
          $ref: '#/components/responses/500'
#identity:
  /v1/identities:
    post:
      summary: Create Identity
      operationId: CreateIdentity
      description: Endpoint to create an identity
      tags:
        - Identity
      responses:
        '201':
          description: Identity created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIdentityResponse'
        '500':
          $ref: '#/components/responses/500-CreateIdentity'
    get:
      summary: Get Identities
      operationId: GetIdentities
      description: Endpoint to get all the identities
      tags:
        - Identity
      responses:
        '200':
          description: all good
          content:
            application/json:
              schema:
                type: array
                x-omitempty: false
                items:
                  type: string
        '500':
          $ref: '#/components/responses/500'
  /v1/identities/state:
    post:
      summary: Publish State On-Chain
      operationId: PublishState
      description: Endpoint to publish state on-chain
      tags:
        - Identity
      responses:
        '200':
          description: State published
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishStateResponse'
        '500':
          $ref: '#/components/responses/500'
#claims:
  /v1/{identifier}/claims:
    post:
      summary: Create Claim
      operationId: CreateClaim
      description: Endpoint to create a Claim
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/pathIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClaimRequest'
      responses:
        '201':
          description: Claim created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClaimResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
  /v1/{identifier}/claims/{id}:
    get:
      summary: Get Claim
      operationId: GetClaim
      description: Endpoint to retrieve a created Claim
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/pathIdentifier'
        - $ref: '#/components/parameters/pathClaim'
      responses:
        '200':
          description: Claim found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetClaimResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /v1/{identifier}/claims/revoke/{nonce}:
    post:
      summary: Revoke Claim
      operationId: RevokeClaim
      description: Endpoint to revoke a claim
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/pathIdentifier'
        - $ref: '#/components/parameters/pathNonce'
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevokeClaimResponse'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /v1/{identifier}/claims/revocation/status/{nonce}:
    get:
      summary: Get Revocation Status
      operationId: GetRevocationStatus
      description: Endpoint to get the revocation status
      tags:
        - Claim
      parameters:
        - $ref: '#/components/parameters/pathIdentifier'
        - $ref: '#/components/parameters/pathNonce'
      responses:
        '200':
          description: Proof
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationStatusResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'


components:
  schemas:
    Health:
      type: object
      required:
        - db
        - cache
      properties:
        db:
          type: boolean
          example: true
        cache:
          type: boolean
          example: true
    GenericErrorMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 'Something happen'

    #identity
    CreateIdentityResponse:
      type: object
      required:
        - identity
        - relay
        - immutable
        - status
      properties:
        identifier:
          type: string
        relay:
          type: string
        immutable:
          type: boolean
        state:
          $ref: '#/components/schemas/IdentityState'

    IdentityState:
      type: object
      required:
        - stateID
        - identifier
        - status
        - modifiedAt
        - createdAt
      properties:
        stateID:
          type: integer
          format: int64
          x-go-json-ignore: true
        identifier:
          type: string
          x-go-json-ignore: true
        state:
          type: string
        rootOfRoots:
          type: string
        claimsTreeRoot:
          type: string
        revocationTreeRoot:
          type: string
        blockTimestamp:
          type: integer
        blockNumber:
          type: integer
        txID:
          type: string
        previousState:
          type: string
        status:
          type: string
        modifiedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time

    PublishStateResponse:
      type: object
      properties:
        hex:
          type: string

    #claims
    CreateClaimRequest:
      type: object
      required:
        - credentialSchema
        - type
        - credentialSubject
      properties:
        credentialSchema:
          type: string
          x-omitempty: false
        type:
          type: string
          x-omitempty: false
        credentialSubject:
          type: string
          format: json
          x-omitempty: false
        expiration:
          type: integer
          format: int64
        version:
          type: integer
          format: uint32
        revNonce:
          type: integer
          format: uint64
        subjectPosition:
          type: string
        merklizedRootPosition:
          type: string

    CreateClaimResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          x-omitempty: false

    GetClaimResponse:
      type: object
      required:
        - id
        - "@context"
        - type
        - credentialSubject
        - credentialStatus
        - issuer
        - credentialSchema
        - proof
      properties:
        id:
          type: string
          x-omitempty: false
        "@context":
          type: array
          x-omitempty: false
          items:
            type: string
        type:
          type: array
          x-omitempty: false
          items:
            type: string
        expiration:
          type: string
          format: date-time
        issuanceDate:
          type: string
          format: date-time
        credentialSubject:
          type: object
          x-omitempty: false
        credentialStatus:
          type: null
        issuer:
          type: string
          x-omitempty: false
        credentialSchema:
          $ref: '#/components/schemas/CredentialSchema'
          x-omitempty: false
        proof:
          type: null

    CredentialSchema:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          x-omitempty: false
        type:
          type: string
          x-omitempty: false


    RevokeClaimResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          x-omitempty: false
          example: pending

    RevocationStatusResponse:
      type: object
      required:
        - issuer
        - mtp
      properties:
        issuer:
          type: object
          properties:
            state:
              type: string
            rootOfRoots:
              type: string
            claimsTreeRoot:
              type: string
            revocationTreeRoot:
              type: string
        mtp:
          type: object
          required:
            - existence
          properties:
            existence:
              type: boolean
            nodeAux:
              type: object
              properties:
                key:
                  type: string
                  x-go-type: merkletree.Hash
                  x-go-type-import:
                    name: Hash
                    path: github.com/iden3/go-merkletree-sql
                value:
                  type: string
                  x-go-type: merkletree.Hash
                  x-go-type-import:
                    name: Hash
                    path: github.com/iden3/go-merkletree-sql

  parameters:
    pathIdentifier:
      name: identifier
      in: path
      required: true
      description: Identity identifier
      schema:
        type: string
    pathClaim:
      name: id
      in: path
      required: true
      description: Claim identifier
      schema:
        type: string
    pathNonce:
      name: nonce
      in: path
      required: true
      description: Claim nonce
      schema:
        type: integer
        format: int64


  responses:
    '400':
      description: 'Bad Request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '401':
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '402':
      description: 'Payment Required'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '404':
      description: 'Not found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '407':
      description: 'Proxy Authentication Required'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '500':
      description: 'Internal Server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '500-CreateIdentity':
      description: 'Internal Server error'
      content:
        application/json:
          schema:
            type: object
            properties:
              requestID:
                type: string
              code:
                type: integer
              error:
                type: string
