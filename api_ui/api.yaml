openapi: 3.1.0
info:
  title: Polygon ID - Issuer - UI API
  description: |
    Documentation for the Issuer - UI API
  version: 0.1.0

servers:
  - description: Local
    url: http://localhost:3002

tags:
  - name: Identity
    description: Collection of endpoints related to Identity
  - name: Credential
    description: Collection of endpoints related to Credential
  - name: Agent
    description: Collection of endpoints related to Mobile
  - name: Connection
    description: Collection of endpoints related to Connections

paths:
  /:
    get:
      summary: Get the documentation
      operationId: GetDocumentation
      x-internal: true
      responses:
        200:
          description: success and returns the documentation in HTML format

  /static/docs/api_admin/api.yaml:
    get:
      summary: Get the documentation yaml file
      operationId: GetYaml
      x-internal: true
      responses:
        200:
          description: success and returns the documentation in Yaml format

  /status:
    get:
      summary: Healthcheck
      operationId: Health
      responses:
        '200':
          description: All services are running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '500':
          $ref: '#/components/responses/500'

  /v1/authentication/qrcode:
    get:
      summary: get authentication qrcode
      operationId: authQRCode
      description: Authentication qrcode
      tags:
        - auth
      responses:
        '200':
          description: authentication qrcode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationQrCodeResponse'
        '500':
          $ref: '#/components/responses/500'

  /v1/authentication/callback:
    post:
      summary: authentication callback
      operationId: authCallback
      description: Authentication callback
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/sessionID'
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
              example: jwz-token
      responses:
        '200':
          description: ok
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /v1/connections/{id}:
    delete:
      summary: delete connection
      operationId: deleteConnection
      description: delete connection
      tags:
        - Connection
      security:
        - basicAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMessage'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  /v1/credentials/{id}:
    get:
      summary: get credential
      operationId: getCredential
      description: get credential details
      tags:
        - Credential
      security:
        - basicAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCredentialResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'

  #credentials:
  /v1/credentials:
    post:
      summary: Create a Credential
      operationId: CreateCredential
      description: Endpoint to create a Credential
      tags:
        - Credential
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCredentialRequest'
      responses:
        '201':
          description: Claim created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCredentialResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '422':
          $ref: '#/components/responses/422'
        '500':
          $ref: '#/components/responses/500'

  /v1/credentials/{id}:
    delete:
      summary: Delete a Credential
      operationId: DeleteCredential
      description: Endpoint to delete a Credential
      tags:
        - Credential
      security:
        - basicAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Claim deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericMessage'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'

  /v1/schemas:
    post:
      summary: Import JSON schema
      operationId: ImportSchema
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportSchemaRequest'
      responses:
        '201':
          description: Schema imported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UUIDResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'


components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    ImportSchemaRequest:
      type: object
      required:
        - url
        - schemaType
      properties:
        url:
          type: string
          example: "https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json/KYCAgeCredential-v3.json"
        schemaType:
          type: string
          example: "vaccinationCertificate"

    Health:
      type: object
      x-omitempty: false
      additionalProperties:
        type: boolean

    AuthenticationQrCodeResponse:
      type: object
      required:
        - id
        - typ
        - type
        - thid
        - body
        - from
      properties:
        id:
          type: string
        typ:
          type: string
        type:
          type: string
        thid:
          type: string
        body:
          type: object
          required:
            - callbackUrl
            - reason
            - scope
          properties:
            callbackUrl:
              type: string
            reason:
              type: string
            scope:
              type: array
        from:
          type: string

    UUIDResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          x-omitempty: false

    GenericErrorMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 'Something happen'

    GetCredentialResponse:
      type: object
      required:
        - id
        - proofTypes
        - createdAt
        - expired
        - schemaHash
        - schemaType
        - revNonce
        - attributes
        - revoked
      properties:
        id:
          type: string
          x-go-type: uuid.UUID
          x-go-type-import:
            name: uuid
            path: github.com/google/uuid
        proofTypes:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        expired:
          type: boolean
        schemaHash:
          type: string
        schemaType:
          type: string
        revoked:
          type: boolean
        revNonce:
          type: integer
          format: uint64
        attributes:
          type: object
          x-omitempty: false

    GenericMessage:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    CreateCredentialRequest:
      type: object
      required:
        - credentialSchema
        - type
        - credentialSubject
      properties:
        credentialSchema:
          type: string
          x-omitempty: false
        type:
          type: string
          x-omitempty: false
        credentialSubject:
          type: object
          x-omitempty: false
        expiration:
          type: integer
          format: int64
      example:
        credentialSchema: "https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json/KYCAgeCredential-v3.json"
        type: "KYCAgeCredential"
        credentialSubject:
          id: "fill with did"
          birthday: 19960424
          documentType: 2
        expiration: 12345

    CreateCredentialResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          x-omitempty: false

  parameters:
    sessionID:
      name: sessionID
      in: query
      description: Session ID
      schema:
        type: string

    id:
      name: id
      in: path
      required: true
      description: id
      schema:
        type: string
        x-go-type: uuid.UUID
        x-go-type-import:
          name: uuid
          path: github.com/google/uuid

  responses:
    '400':
      description: 'Bad Request'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '401':
      description: 'Unauthorized'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '402':
      description: 'Payment Required'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '422':
      description: 'Unprocessable Content'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
    '500':
      description: 'Internal Server error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericErrorMessage'
